set shell := ["powershell.exe", "-c"]
start-colima:
     colima start --cpu $COLIMA_CPU --memory $COLIMA_MEMORY

start-instance:
    net stop PostgreSQL-17
    cp ./configuration/restricted/.env .env
    docker compose up --detach --wait
    docker cp configuration/restricted/postgresql.conf batch-queries-postgresql-postgresql-1:/bitnami/postgresql/conf/postgresql.conf
    docker compose restart
    psql --dbname "$CONNECTION_STRING_ADMIN" --file configure-instance.sql
    psql --dbname "$CONNECTION_STRING_FLIGHT" --file create-lock-tree-view.sql

start-instance-unrestricted:
    net stop PostgreSQL-17
    cp ./configuration/unrestricted/.env .env
    docker compose up --detach --wait
    docker cp configuration/unrestricted/postgresql.conf batch-queries-postgresql-postgresql-1:/bitnami/postgresql/conf/postgresql.conf
    docker compose restart
    psql --dbname "$CONNECTION_STRING_ADMIN" --file configure-instance.sql
    psql --dbname "$CONNECTION_STRING_FLIGHT" --file create-lock-tree-view.sql


# Does not remove the named volume
stop-instance:
    docker compose down

remove-volume:
    docker volume rm batch-queries-postgresql_postgresql_data

get-console:
    psql $env:CONNECTION_STRING

restart-instance:
    docker compose restart

download-flight-dataset:
    curl --output dump.zip https://edu.postgrespro.com/demo-big-en.zip && unzip dump.zip && rm dump.zip && mv demo-big-en-20170815.sql dump.sql

create-flight-dataset:
    psql $env:CONNECTION_STRING  --file dump.sql
    psql $env:CONNECTION_STRING  --command="DROP DATABASE IF EXISTS flight;"
    psql $env:CONNECTION_STRING  --command="ALTER DATABASE demo RENAME TO flight;"

get-database-size:
    psql --dbname "$CONNECTION_STRING" --command="SELECT pg_size_pretty(pg_database_size('$POSTGRESQL_DATABASE_NAME'));"

get-locks:
    psql --dbname "$CONNECTION_STRING_FLIGHT" --command="SELECT * FROM blocking_tree;"

get-running-queries:
    psql --dbname "$CONNECTION_STRING_FLIGHT" --file=get-running-queries.sql

get-running-active-queries:
    psql --dbname "$CONNECTION_STRING_FLIGHT" --file=get-running-active-queries.sql
    psql $env:CONNECTION_STRING  --command="SELECT pg_size_pretty(pg_database_size('$POSTGRESQL_DATABASE_NAME'));"